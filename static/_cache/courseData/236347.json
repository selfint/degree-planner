{"code":"236347","median":91.5,"points":3,"name":"236347 - היסק אוטומטי וסינתזה של תוכנה","connections":{"dependencies":[],"adjacent":["236360"],"exclusive":[]},"about":"הקורס יילמד בשני פרקים עיקריים:\n\n1. היסק אוטומטי - שיטות וכלים בתחומי הוכחה פורמלית של תכונות של\nתכניות מחשב וסמנטיקה פורמלית של שפות תכנות. הנושאים יכללו: תחשיב\nלמבדא, טיפוסים, פולימורפיזם, TYPE THEORY, הצרנת סמנטיקה בלוגיקה מסדר\nראשון, SATISFIABILITY MODULO THEORY.\n\n2. סינתזה של תוכנה - ייצור אוטומטי של קוד על-ידי מהדר. הנושאים יכללו:\nSYNTAX-GUIDED SYNTHESIS, תכנות על פי דוגמאות, COUNTEREXAMPLE-GUIDED\nINDUCTIVE SYNTHESIS,. TYPE-DIRECTED AND DEDUCTIVE SYNTHESIS\nתוצאות למידה: בסיום הקורס, הסטודנטים:\n\n1. יבינו את הבניה של הוכחות בלוגיקה פורמלית מתוך עקרונות מתמטיים\nיסודיים, ואת ההבדלים בין הוכחות פורמליות לבין הוכחות  רגילות  עם דף\nועט.\n\n2. יכירו את המושגים לוגיקה קונסטרוקטיבית ו-MARTIN-LOEF TYPE THEORY,\nבדגש על ההבדלים בינה לבין לוגיקה קלאסית ועל המתאם הוכחות-תכניות._\n\n3. יפתחו מיומנות הוכחת טענות באמצעות COQ PROOF ASSISTANT, מערכת להצרנה\nמכנית של הוכחות המבוססת על DEPENDENT TYPES. \n\n4. ילמדו על הצרנה של תכונות המתייחסות לתכניות מחשב, באמצעות שני סוגים\nמקובלים של סמנטיקה פורמלית: סמנטיקה ביצועית וסמנטיקה אקסיומטית,\nולהוכיח תכונות אלו הן בעזרת COQ והן בהתבסס על הוכחה אוטומטית תוך\nשימוש בכלי SMT.\n\n5. ידעו לסווג את הגישות השונות לסינתזה של תוכנה, ויכירו דוגמאות של\nאלגוריתמים המיישמים כל אחת מן הגישות הללו.\n\n6. יתנסו בסינתזה של תכניות בעזרת כלי סינתזה: SKETCH ו-SYNQUID.\n\n7. יפתחו בעצמם כלי סינתזה של תוכנה, בהתבסס על אלגוריתמים ואופטימיזציות\nשנלמדו, במסגרת פרויקט מסכם.","tests":[]}